/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kafkaexample.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Player_Avro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1578539737049003164L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Player_Avro\",\"namespace\":\"com.avro\",\"fields\":[{\"name\":\"sportName\",\"type\":\"string\",\"doc\":\"sport played by player\"},{\"name\":\"jerseyNumber\",\"type\":\"int\",\"doc\":\"jersey number of player\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"player name\"},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"height\",\"type\":\"double\"}],\"doc:\":\"A schema for player movement events\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Player_Avro> ENCODER =
      new BinaryMessageEncoder<Player_Avro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Player_Avro> DECODER =
      new BinaryMessageDecoder<Player_Avro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Player_Avro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Player_Avro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Player_Avro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Player_Avro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Player_Avro from a ByteBuffer. */
  public static Player_Avro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** sport played by player */
  @Deprecated public java.lang.CharSequence sportName;
  /** jersey number of player */
  @Deprecated public int jerseyNumber;
  /** player name */
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public int age;
  @Deprecated public double height;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Player_Avro() {}

  /**
   * All-args constructor.
   * @param sportName sport played by player
   * @param jerseyNumber jersey number of player
   * @param name player name
   * @param age The new value for age
   * @param height The new value for height
   */
  public Player_Avro(java.lang.CharSequence sportName, java.lang.Integer jerseyNumber, java.lang.CharSequence name, java.lang.Integer age, java.lang.Double height) {
    this.sportName = sportName;
    this.jerseyNumber = jerseyNumber;
    this.name = name;
    this.age = age;
    this.height = height;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sportName;
    case 1: return jerseyNumber;
    case 2: return name;
    case 3: return age;
    case 4: return height;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sportName = (java.lang.CharSequence)value$; break;
    case 1: jerseyNumber = (java.lang.Integer)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: age = (java.lang.Integer)value$; break;
    case 4: height = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sportName' field.
   * @return sport played by player
   */
  public java.lang.CharSequence getSportName() {
    return sportName;
  }

  /**
   * Sets the value of the 'sportName' field.
   * sport played by player
   * @param value the value to set.
   */
  public void setSportName(java.lang.CharSequence value) {
    this.sportName = value;
  }

  /**
   * Gets the value of the 'jerseyNumber' field.
   * @return jersey number of player
   */
  public java.lang.Integer getJerseyNumber() {
    return jerseyNumber;
  }

  /**
   * Sets the value of the 'jerseyNumber' field.
   * jersey number of player
   * @param value the value to set.
   */
  public void setJerseyNumber(java.lang.Integer value) {
    this.jerseyNumber = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return player name
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * player name
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return The value of the 'height' field.
   */
  public java.lang.Double getHeight() {
    return height;
  }

  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(java.lang.Double value) {
    this.height = value;
  }

  /**
   * Creates a new Player_Avro RecordBuilder.
   * @return A new Player_Avro RecordBuilder
   */
  public static com.kafkaexample.avro.Player_Avro.Builder newBuilder() {
    return new com.kafkaexample.avro.Player_Avro.Builder();
  }

  /**
   * Creates a new Player_Avro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Player_Avro RecordBuilder
   */
  public static com.kafkaexample.avro.Player_Avro.Builder newBuilder(com.kafkaexample.avro.Player_Avro.Builder other) {
    return new com.kafkaexample.avro.Player_Avro.Builder(other);
  }

  /**
   * Creates a new Player_Avro RecordBuilder by copying an existing Player_Avro instance.
   * @param other The existing instance to copy.
   * @return A new Player_Avro RecordBuilder
   */
  public static com.kafkaexample.avro.Player_Avro.Builder newBuilder(com.kafkaexample.avro.Player_Avro other) {
    return new com.kafkaexample.avro.Player_Avro.Builder(other);
  }

  /**
   * RecordBuilder for Player_Avro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Player_Avro>
    implements org.apache.avro.data.RecordBuilder<Player_Avro> {

    /** sport played by player */
    private java.lang.CharSequence sportName;
    /** jersey number of player */
    private int jerseyNumber;
    /** player name */
    private java.lang.CharSequence name;
    private int age;
    private double height;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kafkaexample.avro.Player_Avro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sportName)) {
        this.sportName = data().deepCopy(fields()[0].schema(), other.sportName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.jerseyNumber)) {
        this.jerseyNumber = data().deepCopy(fields()[1].schema(), other.jerseyNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.age)) {
        this.age = data().deepCopy(fields()[3].schema(), other.age);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.height)) {
        this.height = data().deepCopy(fields()[4].schema(), other.height);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Player_Avro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kafkaexample.avro.Player_Avro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sportName)) {
        this.sportName = data().deepCopy(fields()[0].schema(), other.sportName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.jerseyNumber)) {
        this.jerseyNumber = data().deepCopy(fields()[1].schema(), other.jerseyNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.age)) {
        this.age = data().deepCopy(fields()[3].schema(), other.age);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.height)) {
        this.height = data().deepCopy(fields()[4].schema(), other.height);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'sportName' field.
      * sport played by player
      * @return The value.
      */
    public java.lang.CharSequence getSportName() {
      return sportName;
    }

    /**
      * Sets the value of the 'sportName' field.
      * sport played by player
      * @param value The value of 'sportName'.
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder setSportName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.sportName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sportName' field has been set.
      * sport played by player
      * @return True if the 'sportName' field has been set, false otherwise.
      */
    public boolean hasSportName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sportName' field.
      * sport played by player
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder clearSportName() {
      sportName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'jerseyNumber' field.
      * jersey number of player
      * @return The value.
      */
    public java.lang.Integer getJerseyNumber() {
      return jerseyNumber;
    }

    /**
      * Sets the value of the 'jerseyNumber' field.
      * jersey number of player
      * @param value The value of 'jerseyNumber'.
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder setJerseyNumber(int value) {
      validate(fields()[1], value);
      this.jerseyNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'jerseyNumber' field has been set.
      * jersey number of player
      * @return True if the 'jerseyNumber' field has been set, false otherwise.
      */
    public boolean hasJerseyNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'jerseyNumber' field.
      * jersey number of player
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder clearJerseyNumber() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * player name
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * player name
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * player name
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * player name
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder setAge(int value) {
      validate(fields()[3], value);
      this.age = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder clearAge() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public java.lang.Double getHeight() {
      return height;
    }

    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder setHeight(double value) {
      validate(fields()[4], value);
      this.height = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public com.kafkaexample.avro.Player_Avro.Builder clearHeight() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Player_Avro build() {
      try {
        Player_Avro record = new Player_Avro();
        record.sportName = fieldSetFlags()[0] ? this.sportName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.jerseyNumber = fieldSetFlags()[1] ? this.jerseyNumber : (java.lang.Integer) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.age = fieldSetFlags()[3] ? this.age : (java.lang.Integer) defaultValue(fields()[3]);
        record.height = fieldSetFlags()[4] ? this.height : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Player_Avro>
    WRITER$ = (org.apache.avro.io.DatumWriter<Player_Avro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Player_Avro>
    READER$ = (org.apache.avro.io.DatumReader<Player_Avro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
